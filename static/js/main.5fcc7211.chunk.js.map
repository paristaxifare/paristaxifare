{"version":3,"sources":["components/CalculateEndTime.js","components/CalculatePrice.js","components/RideAlert.js","components/Ride.js","components/DisplayRide.js","components/FetchTaxi.js","App.js","reportWebVitals.js","index.js"],"names":["CalculateEndTime","props","startTime","Date","console","log","duration","endTime","setSeconds","getSeconds","CalculatePrice","startTimeHour","toString","match","endTimeHour","night","busy","price","distance","id","RideAlert","toISOString","substr","alert","Button","styled","button","Ride","useState","clicked","setClicked","onClick","DisplayRide","taxis","map","item","FetchTaxi","setErrors","setTaxis","a","fetch","json","then","res","catch","err","useEffect","fetchData","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fcc7211.chunk.js","sourcesContent":["function CalculateEndTime(props){\r\n    let startTime = new Date(props.startTime)\r\n    console.log(\"startTime:\" + startTime )\r\n    let duration = props.duration\r\n    let endTime = startTime\r\n    endTime.setSeconds(endTime.getSeconds() + duration);\r\n    startTime = new Date(props.startTime)\r\n    console.log(\"endTime:\" + endTime )\r\n    return endTime;\r\n  }\r\n\r\n  export default CalculateEndTime ","import CalculateEndTime from './CalculateEndTime'\r\n\r\nfunction CalculatePrice(props){\r\n  console.log(\"props:\" + props )\r\n    let startTime = new Date(props.startTime)\r\n    console.log(\"startTime:\" + startTime )\r\n    let duration = props.duration\r\n    let endTime = CalculateEndTime(props)\r\n    console.log(\"endTime:\" + endTime )\r\n    console.log(\"startTime:\" + props.startTime )\r\n    \r\n    let startTimeHour = startTime.toString().match(/\\d\\d(?=:)/);\r\n    console.log(startTimeHour[0]);\r\n    let endTimeHour = endTime.toString().match(/\\d\\d(?=:)/);\r\n    console.log(endTimeHour[0]);\r\n    startTimeHour = startTimeHour[0];\r\n    endTimeHour = endTimeHour[0];\r\n\r\n    //Works if ride duration < 4h\r\n    let night = (startTimeHour > 20 || startTimeHour < 6) ? 1 : 0\r\n    let busy = (startTimeHour > 16 && startTimeHour < 19) ? 1 : 0\r\n    \r\n    let price = 1 + 2.5 * props.distance + 0.5 * night + 1 * busy\r\n    console.log(\"ID:\" + props.id )\r\n    console.log(\"startTime:\" + startTime )\r\n    console.log(\"duration:\" + duration )\r\n    console.log(\"night:\" + night )\r\n    console.log(\"busy:\" + busy )\r\n    console.log(\"Price:\" + price )\r\n\r\n    return price;\r\n  }\r\n  \r\n  export default CalculatePrice","import CalculateEndTime from './CalculateEndTime'\r\n\r\nfunction RideAlert(props) {\r\n  let endTime = CalculateEndTime(props)\r\n  let duration = new Date(props.duration * 1000).toISOString().substr(11, 8)\r\n  alert(\"Duration: \" + duration + \"\\n\\n ETA: \" + endTime);\r\n}\r\n\r\n  export default RideAlert","import React, { useState } from 'react'; \r\nimport styled from 'styled-components';\r\nimport CalculatePrice from './CalculatePrice';\r\nimport RideAlert from './RideAlert'\r\n\r\nconst Button = styled.button`\r\n    background-color: ${props => props.distance > 2 ? 'darkred' : 'black'};\r\n    color: white;\r\n    font-size: 20px;\r\n    padding: 10px 60px;\r\n    border-radius: 5px;\r\n    margin: 10px 0px;\r\n    cursor: pointer;\r\n    `;\r\n\r\n  function Ride(props) {\r\n  \r\n    const [clicked, setClicked] = useState(\"\");\r\n\r\n    const changeClicked = () => setClicked(\"Clicked\");\r\n\r\n    return (\r\n      <div>\r\n        <Button onClick={() => \r\n          {\r\n            RideAlert(props); \r\n            changeClicked() \r\n          }} \r\n          distance={props.distance}\r\n        >\r\n          Taxi nÂ°{props.id}  Price: {CalculatePrice(props)} {clicked} \r\n        </Button>\r\n      </div>    \r\n      );\r\n  }\r\n\r\n  export default Ride","import Ride from \"./Ride\"\r\n\r\nconst DisplayRide = (props)  => {\r\n\r\n  return (\r\n     <div>\r\n     {props.taxis.map((item) => (\r\n        <li key ={item.id}>\r\n          <Ride id={item.id} \r\n                distance={item.distance}\r\n                duration={item.duration} \r\n                startTime={item.startTime}/>\r\n        </li>\r\n        ))}\r\n     </div>\r\n  )\r\n}\r\n\r\nexport default  DisplayRide;","import React, { useState, useEffect} from \"react\";\r\nimport DisplayRide from './DisplayRide'\r\n\r\nconst FetchTaxi = ()  => {\r\n  const  [hasError, setErrors] =  useState(false);\r\n  const  [taxis,setTaxis ]= useState([]);\r\n\r\n  async function fetchData() {\r\n    const res = await fetch(\"https://api.mocki.io/v1/137f4ea6\");\r\n    res\r\n    .json()\r\n    .then(res => setTaxis(res))\r\n    .catch(err => setErrors(err));\r\n\r\n    console.log(\"FETCH\")\r\n}\r\n  useEffect(() => {\r\n    fetchData();\r\n},[]);\r\n\r\n  return (\r\n    <div>        \r\n          <DisplayRide taxis={taxis}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default  FetchTaxi;","import './App.css';\nimport FetchTaxi from './components/FetchTaxi'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      Paris Taxi Fare\n      <FetchTaxi />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}